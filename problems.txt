في مسائل في LeetCode علشان تحلها محتاج تستخدم اتنين داتا ستراكتشر مع بعض. كل داتا ستراكتشر بتكون بتلعب دور في حل المسألة. المسائل دي بتختبر قدرة الديفيلوبر على فهم وتطبيق الداتا ستراكتشر وكمان قدرته على إنه يجمع ما بينهم بطريقة تحسن الحل وتعطي أداء أفضل أو تبسط الحل بدلًا من كتابة لوجيك معقد.

١. Sliding Window with HashMap/Set
 https://lnkd.in/eDgzqyZ7
علشان تلاقي أطول Substring من غير ما يكون فيها حروف متكررة، ممكن تستخدم Sliding Window علشان توسع وتضيق النطاق بتاع الـSubstring. وHashMap أو HashSet بيستخدموا علشان يتأكدوا إذا كان الحرف ظهر قبل كده في الـWindow الحالية، وده بيسمح بعمليات بحث وتحديث سريعة.

٢. Priority Queue (Heap) with HashMap
https://lnkd.in/eEGTSQxQ
 HashMap بيستخدم لعد تكرار كل عنصر، وPriority Queue (Heap) بتستخدم للحفاظ على أعلى k عناصر بالتكرار الأعلى. الدمج ده بيسمح بعدّ التكرار بكفاءة واستخراج أعلى k عناصر بسرعة.

٣. Stack with Queue
https://lnkd.in/e5hC2gsf
المسألة بتطلب استخدام واحد أو أكثر من Queues علشان تحاكي سلوك الـStack، وده بيحتاج فهم كويس إزاي تتحكم في عمليات الـQueue علشان تقلد عمليات الـStack (زي الـPush والـPop).

٤. Queue with Stack
https://lnkd.in/eDdrxRaT
ده عكس المثال السابق، بيتم استخدام Stacks لتطبيق عمليات الـQueue (Enqueue وDequeue). ممكن استخدام اتنين Stack لضمان أن العناصر تضاف وتزال بالترتيب الصحيح.

٥. Deque (Double-Ended Queue) with Array
https://lnkd.in/eHuxdQMq
Deque بيستخدم علشان يتابع أماكن العناصر في الـWindow الحالية، وبيضمن إن العنصر الأكبر يكون دايمًا في البداية. الـArray بيستخدم لتخزين النتائج النهائية.

٦. HashSet with Stack
https://lnkd.in/eE9FK7_n
HashSet بيستخدم لتجنب النتائج المتكررة، وStack بيستخدم لإدارة الحروف وتحديد وضع الأقواس الصحيح.

٧. Graph with HashMap
https://lnkd.in/eTZifhvC
HashMap بيستخدم لربط النودز الأصلية بنظائرها المكررة لتجنب زيارة النودز مرة تانية، بينما الـAdjacency List بتمثل بنية الجراف للتنقل.

٨. Two Heaps (Max-Heap and Min-Heap)
https://lnkd.in/e-tTsxAu
استخدام اتنين Heap للحفاظ على النص الأصغر والأكبر من الداتا ستريم. الـMax-Heap بيخزن النصف الأصغر من الأرقام، والـMin-Heap بيخزن النصف الأكبر. ده بيسمح بحساب الوسيط بكفاءة في أي وقت.

٩. Trie with HashMap
https://lnkd.in/ec4YV4mh
Trie بيستخدم لتخزين والبحث بكفاءة عن البريفكس بتاع الكلمات، وHashMap ممكن يستخدم لتخزين بيانات إضافية مرتبطة بالنودز أو لإدارة الخانات اللي تم زيارتها.

١٠. Binary Search Tree (BST) with Stack
https://lnkd.in/eHdeiuRB
Stack بيستخدم لتطبيق تنقل In-Order لـBST، بيسمح بإرجاع العنصر الأصغر التالي في وقت O(1)، والـStack بيتولى حالة التنقل.

المسائل دي بتستغل الخصائص الفريدة للداتا ستراكتشر المختلفة لتحسين Time Complexity، وMemory، أو لتبسيط الكود.
 استخدام أكتر من داتا ستراكتشر مع بعض بكفاءة بيتطلب فهم عميق لخصائصهم وإزاي يقدروا يكملوا بعض.
